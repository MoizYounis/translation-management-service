version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: translation-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./storage:/var/www/storage
        environment:
            APP_NAME: "Translation Management Service"
            APP_ENV: local
            APP_DEBUG: "true"
            APP_URL: http://localhost:8000
            DB_CONNECTION: mysql
            DB_HOST: db
            DB_PORT: 3306
            DB_DATABASE: translation-service
            DB_USERNAME: root
            DB_PASSWORD: secret
            CACHE_DRIVER: redis
            SESSION_DRIVER: redis
            QUEUE_CONNECTION: redis
            REDIS_HOST: redis
            REDIS_PASSWORD: null
            REDIS_PORT: 6379
        networks:
            - translation-network
        depends_on:
            - db
            - redis

    nginx:
        image: nginx:alpine
        container_name: translation-nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - translation-network
        depends_on:
            - app

    db:
        image: mysql:8
        container_name: translation-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: translation-service
            MYSQL_ROOT_PASSWORD: secret
            # MYSQL_PASSWORD: secret
            # MYSQL_USER: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        ports:
            - "3306:3306"
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - translation-network

    redis:
        image: redis:alpine
        container_name: translation-redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - translation-network

networks:
    translation-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
